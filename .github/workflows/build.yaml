name: Classic-Build

on:
  release:
    types: [ published ]

jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
      #      - name: Dump GitHub context
      #        env:
      #          GITHUB_CONTEXT: ${{ toJSON(github) }}
      #        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v1

      #      - name: Extract release notes
      #        id: extract-release-notes
      #        uses: ffurrer2/extract-release-notes@v1
      #        with:
      #          release_notes_file: RELEASE_NOTES.md

      #    - uses: BigWigsMods/packager@master
      #      name: Build Retail and upload to CurseForge
      #      with:
      #        args: -l -g retail

      - uses: BigWigsMods/packager@master
        name: Build Classic and upload to CurseForge
        with:
          args: -l -g classic

      - name: Name artifact with release
        run: echo 'ARTIFACT_NAME=${{ github.event.repository.name }}-${{ github.event.ref }}' >> $GITHUB_ENV

      - name: Store built zip
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./zip/

    env:
      CF_API_KEY: ${{ secrets.CF_API_KEY }}

  discord-push:
    needs: publish-release
    runs-on: ubuntu-latest
    steps:

      # checkout
      - name: Checkout (for proper changelog generation)
        uses: actions/checkout@v1

      - name: Get artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Zip dir
        run: ls && zip -r "${{ github.event.repository.name }}-${{ github.event.ref }}.zip" "${{ github.event.repository.name }}-${{ github.event.ref }}/${{ github.event.repository.name }}"
      #
      #      - name: List dirs
      #        run: ls -aRl *.zip

      - name: Get latest release data
        id: LatestRelease
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft

      #      - name: Extract release notes
      #        id: extract-release-notes
      #        uses: ffurrer2/extract-release-notes@v1
      #        with:
      #          release_notes_file: RELEASE_NOTES.md
      #      - name: Generate changelog between current and latest release (${{ steps.LatestRelease.outputs.release }})
      #        id: changelog
      #        uses: metcalfc/changelog-generator@v1.0.0
      #        with:
      #          myToken: ${{ secrets.GITHUB_TOKEN }}
      #          head-ref: ${{ github.event.ref }}
      #          base-ref: ${{ steps.LatestRelease.outputs.release }}

      - name: Send Discord message with built file
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_RBT_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_RBT_WEBHOOK_TOKEN }}
          file: ${{ github.event.repository.name }}-${{ github.event.ref }}.zip
          message: "**New release (pushed to CurseForge):** `${{ github.event.ref }}`\n
          _soon available on https://www.curseforge.com/wow/addons/returnbufftracker-classic-continued_
          "

      #      - name: Echo changelog to file
      #        run: echo '${{ steps.changelog.outputs.changelog }}' >> changelog.txt

      #      - uses: lifepal/markdown-to-html@v1.1
      #        id: html_changelog
      #        with:
      #          text: ${{ steps.changelog.outputs.changelog }}

      #      - name: Echo HTML changelog to file
      #        run: echo '${{ steps.html_changelog.outputs.html }}' >> changelog.html

      - name: Post changelog
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_RBT_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_RBT_WEBHOOK_TOKEN }}
          message: "**Changelog since `${{ steps.LatestRelease.outputs.release }}` (latest release)**"
          # file: changelog.txt
          file: CHANGELOG.md
      #          > ${{ steps.changelog.outputs.changelog }}"

